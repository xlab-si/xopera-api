tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  template_name: "scaling"
  template_author: "XLAB"
  template_version: "1.0"

interface_types:
  opera.interfaces.Scaling:
    derived_from: tosca.interfaces.Root
    operations:
      scale_down:
        description: scale down
      scale_up:
        description: scale up

node_types:
  opera.nodes.aws.AwsLambda:
    derived_from: tosca.nodes.SoftwareComponent
    attributes:
      example_output:
        type: string
    interfaces:
      Standard:
        operations:
          create: playbooks/create.yaml
          delete: playbooks/delete.yaml
      Scaling:
        type: opera.interfaces.Scaling
        operations:
          scale_down: playbooks/scale_down.yaml
          scale_up: playbooks/scale_up.yaml

  opera.nodes.monitoring.configure:
    derived_from: tosca.nodes.SoftwareComponent
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
        operations:
          configure:
            implementation: playbooks/configure.yaml
            inputs:
              cpu_lower_bound:
                type: float
                value: { get_property: [ opera.policies.scaling.ScaleDown, cpu_lower_bound ] }
              cpu_upper_bound:
                type: float
                value: { get_property: [ opera.policies.scaling.ScaleUp, cpu_upper_bound ] }

policy_types:
  opera.policies.scaling.ScaleDown:
    derived_from: tosca.policies.Scaling
    properties:
      cpu_lower_bound:
        description: The lower bound for the CPU
        type: float
        required: false
    targets: [ opera.nodes.aws.AwsLambda, opera.nodes.monitoring.configure ]
    triggers:
      opera.triggers.scaling.ScaleDown:
        description: A trigger for scaling down
        event: scale_down_trigger
        target_filter:
          node: opera.nodes.aws.AwsLambda
        action:
          - call_operation: Scaling.scale_down

  opera.policies.scaling.ScaleUp:
    derived_from: tosca.policies.Scaling
    properties:
      cpu_upper_bound:
        description: The upper bound for the CPU
        type: float
        required: false
    targets: [ opera.nodes.aws.AwsLambda, opera.nodes.monitoring.configure ]
    triggers:
      opera.triggers.scaling.ScaleUp:
        description: A trigger for scaling up
        event: scale_up_trigger
        target_filter:
          node: opera.nodes.aws.AwsLambda
        action:
          - call_operation: Scaling.scale_up

topology_template:
  inputs:
    some_input:
      type: string

  node_templates:
    aws_lambda:
      type: opera.nodes.aws.AwsLambda
      attributes:
        example_output: example
      requirements:
        - host: compute

    configure_monitoring:
      type: opera.nodes.monitoring.configure
      requirements:
        - host: compute

    compute:
      type: tosca.nodes.Compute
      attributes:
        public_address: localhost

  policies:
    - scale_down:
        type: opera.policies.scaling.ScaleDown
        properties:
          cpu_lower_bound: 10
        targets: [ aws_lambda, configure_monitoring ]

    - scale_up:
        type: opera.policies.scaling.ScaleUp
        properties:
          cpu_upper_bound: 90
        targets: [ aws_lambda, configure_monitoring ]

  outputs:
    output_example:
      description: Just an output example
      value: { get_attribute: [ aws_lambda, example_output ] }
